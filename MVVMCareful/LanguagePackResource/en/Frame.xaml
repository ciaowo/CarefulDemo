<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--Prism-->
    <!--Composition Logging-->
    <TextBlock x:Key="DefaultTextLoggerPattern">{1}: {2}. Priority: {3}. Timestamp:{0:u}.</TextBlock>
    <!--Composition Modularity-->
    <TextBlock x:Key="InvalidArgumentAssemblyUri">The argument must be a valid absolute Uri to an assembly file.</TextBlock>
    <TextBlock x:Key="ConfigurationStoreCannotBeNull">The ConfigurationStore cannot contain a null value.</TextBlock>
    <TextBlock x:Key="ModulePathCannotBeNullOrEmpty">The ModulePath cannot contain a null value or be empty</TextBlock>
    <TextBlock x:Key="DirectoryNotFound">Directory {0} was not found.</TextBlock>
    <TextBlock x:Key="StartupModuleDependsOnAnOnDemandModule">Module {0} is marked for automatic initialization when the application starts, but it depends on modules that are marked as OnDemand initialization. To fix this error, mark the dependency modules for InitializationMode=WhenAvailable, or remove this validation by extending the ModuleCatalog class.</TextBlock>
    <TextBlock x:Key="DuplicatedModule">A duplicated module with name {0} has been found by the loader.</TextBlock>
    <TextBlock x:Key="ModuleDependenciesNotMetInGroup">Module {0} depends on other modules that don't belong to the same group.</TextBlock>
    <TextBlock x:Key="DependencyOnMissingModule">A module declared a dependency on another module which is not declared to be loaded. Missing module(s): {0}</TextBlock>
    <TextBlock x:Key="CyclicDependencyFound">At least one cyclic dependency has been found in the module catalog. Cycles in the module dependencies must be avoided.</TextBlock>
    <TextBlock x:Key="StringCannotBeNullOrEmpty">The provided String argument {0} must not be null or empty.</TextBlock>
    <TextBlock x:Key="DependencyForUnknownModule">Cannot add dependency for unknown module {0}</TextBlock>
    <TextBlock x:Key="ValueMustBeOfTypeModuleInfo">The value must be of type ModuleInfo.</TextBlock>
    <TextBlock x:Key="FailedToLoadModule">An exception occurred while initializing module '{0}'. 
    - The exception message was: {2}
    - The Assembly that the module was trying to be loaded from was:{1}
    Check the InnerException property of the exception for more information. If the exception occurred while creating an object in a DI container, you can exception.GetRootException() to help locate the root cause of the problem.
    </TextBlock>
    <TextBlock x:Key="FailedToLoadModuleNoAssemblyInfo">An exception occurred while initializing module '{0}'. 
    - The exception message was: {1}
    Check the InnerException property of the exception for more information. If the exception occurred 
    while creating an object in a DI container, you can exception.GetRootException() to help locate the 
    root cause of the problem.</TextBlock>
    <TextBlock x:Key="FailedToGetType">Unable to retrieve the module type {0} from the loaded assemblies.  You may need to specify a more fully-qualified type name.</TextBlock>
    <TextBlock x:Key="NoRetrieverCanRetrieveModule">There is currently no moduleTypeLoader in the ModuleManager that can retrieve the specified module.</TextBlock>
    <TextBlock x:Key="ModuleNotFound">Module {0} was not found in the catalog.</TextBlock>
    <TextBlock x:Key="FailedToRetrieveModule">Failed to load type for module {0}. 
Error was: {1}.</TextBlock>
    <!--Composition Regions Behaviors-->
    <TextBlock x:Key="HostControlCannotBeSetAfterAttach">The HostControl property cannot be set after Attach method has been called.</TextBlock>

    <!--Composition Regions-->
    <TextBlock x:Key="RegionCreationException">An exception occurred while creating a region with name '{0}'. The exception was: {1}.</TextBlock>
    <TextBlock x:Key="ItemsControlHasItemsSourceException">ItemsControl's ItemsSource property is not empty. 
    This control is being associated with a region, but the control is already bound to something else. 
    If you did not explicitly set the control's ItemSource property, 
    this exception may be caused by a change in the value of the inherited RegionManager attached property.</TextBlock>
    <TextBlock x:Key="CannotChangeRegionNameException">Cannot change the region name once is set. The current region name is '{0}'.</TextBlock>
    <TextBlock x:Key="RegionNameCannotBeEmptyException">The region name cannot be null or empty.</TextBlock>
    <TextBlock x:Key="RegionViewExistsException">View already exists in region.</TextBlock>
    <TextBlock x:Key="RegionViewNameExistsException">View with name '{0}' already exists in the region.</TextBlock>
    <TextBlock x:Key="ViewNotInRegionException">The region does not contain the specified view.</TextBlock>
    <TextBlock x:Key="AdapterInvalidTypeException">The object must be of type '{0}' in order to use the current region adapter.</TextBlock>
    <TextBlock x:Key="MappingExistsException">Mapping with the given type is already registered: {0}.</TextBlock>
    <TextBlock x:Key="NoRegionAdapterException">The IRegionAdapter for the type {0} is not registered in the region adapter mappings. You can register an IRegionAdapter for this control by overriding the ConfigureRegionAdapterMappings method in the bootstrapper.</TextBlock>
    <TextBlock x:Key="RegionBehaviorRegionCannotBeSetAfterAttach">The Region property cannot be set after Attach method has been called.</TextBlock>
    <TextBlock x:Key="RegionBehaviorAttachCannotBeCallWithNullRegion">The Attach method cannot be called when Region property is null.</TextBlock>
    <TextBlock x:Key="CanOnlyAddTypesThatInheritIFromRegionBehavior">Type '{0}' does not implement from IRegionBehavior.</TextBlock>
    <TextBlock x:Key="TypeWithKeyNotRegistered">No BehaviorType with key '{0}' was registered.</TextBlock>
    <TextBlock x:Key="UpdateRegionException">An exception occurred while trying to create region objects. 
    - The most likely causing exception was: '{0}'.
    But also check the InnerExceptions for more detail or call .GetRootException().</TextBlock>
    <TextBlock x:Key="RegionNotInRegionManagerException">The region manager does not contain the {0} region.</TextBlock>
    <TextBlock x:Key="RegionNameExistsException">Region with the given name is already registered: {0}</TextBlock>
    <TextBlock x:Key="DeactiveNotPossibleException">Deactivation is not possible in this type of region.</TextBlock>
    <TextBlock x:Key="ContentControlHasContentException">ContentControl's Content property is not empty. 
    This control is being associated with a region, but the control is already bound to something else. 
    If you did not explicitly set the control's Content property, 
    this exception may be caused by a change in the value of the inherited RegionManager attached property.</TextBlock>
    <TextBlock x:Key="RegionNotFound">This RegionManager does not contain a Region with the name '{0}'.</TextBlock>
    <TextBlock x:Key="CannotCreateNavigationTarget">Cannot create navigation target '{0}'.</TextBlock>
    <TextBlock x:Key="RegionManagerWithDifferentNameException">The region being added already has a name of '{0}' and cannot be added to the region manager with a different name ('{1}').</TextBlock>
    <TextBlock x:Key="NavigationServiceHasNoRegion">Navigation cannot proceed until a region is set for the RegionNavigationService.</TextBlock>
    <TextBlock x:Key="OnViewRegisteredException">An exception has occurred while trying to add a view to region '{0}'. 
    - The most likely causing exception was was: '{1}'.
    But also check the InnerExceptions for more detail or call .GetRootException().</TextBlock>

    <!--Composition ViewModel-->
    <TextBlock x:Key="PropertySupport_NotMemberAccessExpression_Exception">The expression is not a member access expression.</TextBlock>
    <TextBlock x:Key="PropertySupport_ExpressionNotProperty_Exception">The member access expression does not access a property.</TextBlock>
    <TextBlock x:Key="PropertySupport_StaticExpression_Exception">The referenced property is a static property.</TextBlock>

    <!--MefExtensions-->
    <TextBlock x:Key="NullLoggerFacadeException">The ILoggerFacade is required and cannot be null.</TextBlock>
    <TextBlock x:Key="BootstrapperSequenceCompleted">Bootstrapper sequence completed</TextBlock>
    <TextBlock x:Key="InitializingModules">Initializing modules</TextBlock>
    <TextBlock x:Key="InitializingShell">Initializing shell</TextBlock>
    <TextBlock x:Key="UpdatingRegions">Updating Regions.</TextBlock>
    <TextBlock x:Key="SettingTheRegionManager">Setting the RegionManager.</TextBlock>
    <TextBlock x:Key="CreatingShell">Creating shell</TextBlock>
    <TextBlock x:Key="RegisteringFrameworkExceptionTypes">Registering Framework Exception Types</TextBlock>
    <TextBlock x:Key="ConfiguringDefaultRegionBehaviors">Configuring default region behaviors</TextBlock>
    <TextBlock x:Key="ConfiguringRegionAdapters">Configuring region adapters</TextBlock>
    <TextBlock x:Key="ConfiguringServiceLocatorSingleton">Configuring ServiceLocator singleton</TextBlock>
    <TextBlock x:Key="ConfiguringMefContainer">Configuring MEF container</TextBlock>
    <TextBlock x:Key="NullCompositionContainerException">The CompositionContainer is required and cannot be null.</TextBlock>
    <TextBlock x:Key="CreatingMefContainer">Creating Mef container</TextBlock>
    <TextBlock x:Key="ConfiguringCatalogForMEF">Configuring catalog for MEF</TextBlock>
    <TextBlock x:Key="CreatingCatalogForMEF">Creating catalog for MEF</TextBlock>
    <TextBlock x:Key="ConfiguringModuleCatalog">Configuring module catalog.</TextBlock>
    <TextBlock x:Key="NullModuleCatalogException">The IModuleCatalog is required and cannot be null in order to initialize the modules.</TextBlock>
    <TextBlock x:Key="CreatingModuleCatalog">Creating module catalog.</TextBlock>
    <TextBlock x:Key="LoggerWasCreatedSuccessfully">Logger was created successfully.</TextBlock>

    <!--Mvvm Commands-->
    <TextBlock x:Key="CannotRegisterCompositeCommandInItself">Cannot register a CompositeCommand in itself.</TextBlock>
    <TextBlock x:Key="CannotRegisterSameCommandTwice">Cannot register the same command twice in the same CompositeCommand.</TextBlock>
    <TextBlock x:Key="DelegateCommandDelegatesCannotBeNull">Neither the executeMethod nor the canExecuteMethod delegates can be null.</TextBlock>
    <TextBlock x:Key="DelegateCommandInvalidGenericPayloadType">T for DelegateCommand&lt;T&gt; is not an object nor Nullable.</TextBlock>
    
    <!--PubSubEvents-->
    <TextBlock x:Key="InvalidDelegateRerefenceTypeException">Invalid Delegate Reference Type Exception</TextBlock>
    <TextBlock x:Key="EventAggregatorNotConstructedOnUIThread">To use the UIThread option for subscribing, the EventAggregator must be constructed on the UI thread.</TextBlock>

</ResourceDictionary>