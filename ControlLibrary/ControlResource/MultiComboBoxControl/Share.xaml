<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Careful.Controls.MultiComboBoxControl">
    <!--  下拉按钮样式：ToggleButton样式  ['tɑɡl] 开关，触发器；拴扣；[船] 套索钉  -->
    <!--  图标大小：local:ControlAttachProperty.FIconSize  -->
    <!--  图标边距：local:ControlAttachProperty.FIconMargin  -->
    <!--  图标：local:ControlAttachProperty.FIcon  -->
    <Style x:Key="FIcon" TargetType="TextBlock">
        <!--<Setter Property="FontFamily" Value="/Util.Controls;component/Resources/#SF2015"></Setter>-->
        <!--<Setter Property="Foreground" Value="{StaticResource TextForeground}"/>-->
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="20" />
    </Style>

    <Style x:Key="ComboToggleButton" TargetType="{x:Type ToggleButton}">
        <!--<Setter Property="Foreground" Value="{StaticResource TextForeground}" />-->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="grid" Background="#00000000">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="#FFDBDBDB"
                            BorderThickness="0"
                            CornerRadius="1">
                            <!--<Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                        <GradientStop Color="#FFABADB3" Offset="0.05"/>
                        <GradientStop Color="#FFE2E3EA" Offset="0.07"/>
                        <GradientStop Color="#FFE3E9EF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>-->
                            <Border CornerRadius="2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF79BFDC" />
                                        <GradientStop Offset="1" Color="#FF5BA4CC" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <ContentPresenter />
                            </Border>
                        </Border>
                        <Path
                            x:Name="path"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 3.5 4 L 7 0 Z"
                            Fill="Gray" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="path" Property="Fill" Value="#FF058CD2" />


                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  编辑状态文本框样式  -->
    <Style x:Key="EditableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MaxLength" Value="2048" />
        <Setter Property="Foreground" Value="Black" />
        <!--<Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />-->
        <!--<Setter Property="SelectionBrush" Value="{StaticResource TextSelectionBrush}" />-->
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="Focusable" Value="True" />
        <!--<Setter Property="CaretBrush" Value="{StaticResource TextForeground}" />-->
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <!--<Setter Property="Opacity" Value="{StaticResource ReadonlyOpacity}"></Setter>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>