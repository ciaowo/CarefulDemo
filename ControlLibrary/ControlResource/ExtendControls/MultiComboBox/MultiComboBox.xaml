<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ControlResource.ExtendControlStyle.MultiComboBox">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ControlResource;component/ExtendControls/MultiComboBox/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ControlResource;component/ExtendControls/MultiComboBox/Share.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ControlResource;component/ExtendControls/MultiComboBox/ToggleButton.xaml" />
        
    </ResourceDictionary.MergedDictionaries>
    <local:TrueToFalseConverter x:Key="conTrueToFalseConverter"></local:TrueToFalseConverter>
        <!--  多选项样式  -->
    <Style x:Key="CheckItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsSelected" Value="{Binding IsSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <!--<CheckBox IsChecked="{Binding IsSelectedItem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource TemplatedParent}}">-->
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <!--</CheckBox>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource ItemSelectedForeground}" />
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource ItemMouseOverForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  MultiComboBox普通样式  -->
    <Style x:Key="DefaultMultiComboBox" TargetType="{x:Type local:MultiComboBox}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MultiComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border
                            x:Name="Bg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="21" />
                            </Grid.ColumnDefinitions>
                            <!--  Label区域  -->
                            <ContentControl
                                x:Name="Label"
                                Margin="1,1,0,1"
                                Content="{TemplateBinding local:ControlAttachProperty.Label}"
                                IsHitTestVisible="False"
                                IsTabStop="False"
                                Template="{TemplateBinding local:ControlAttachProperty.LabelTemplate}" />
                            <!--  附加内容区域  -->
                            <Border
                                x:Name="PART_AttachContent"
                                Grid.Column="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Panel.ZIndex="2">
                                <ContentControl
                                    VerticalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Template="{TemplateBinding local:ControlAttachProperty.AttachContent}" />
                            </Border>
                            <!--  下拉按钮  -->
                            <ToggleButton
                                x:Name="PART_DropDownToggle"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Margin="2,1,2,1"
                                Panel.ZIndex="1"
                                Background="{TemplateBinding local:ControlAttachProperty.FocusBackground}"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource conTrueToFalseConverter}, Mode=OneWay}"
                                IsTabStop="False"
                                Style="{StaticResource ComboToggleButton}" />
                            <!--  水印  -->
                            <Border Grid.Column="1">
                                <TextBlock
                                    x:Name="Message"
                                    Margin="5,2,5,2"
                                    Padding="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Opacity="0.6"
                                    Text="{TemplateBinding local:ControlAttachProperty.Watermark}"
                                    TextAlignment="Center"
                                    Visibility="Collapsed" />
                            </Border>
                            <!--  内容区  -->
                            <Grid
                                Grid.Column="1"
                                Margin="2,0,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <!--  文本编辑  -->
                                <TextBox
                                    x:Name="PART_EditableTextBox"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="True"
                                    IsReadOnly="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Style="{StaticResource EditableTextBoxStyle}"
                                    Text="{Binding Path=Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox">
                                            <Border
                                                Name="Bd"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                <ScrollViewer
                                                    x:Name="PART_ContentHost"
                                                    HorizontalAlignment="Left"
                                                    HorizontalContentAlignment="Left"
                                                    Focusable="false"
                                                    HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Hidden" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="Bd" Property="Opacity" Value="0.5" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                            </Grid>
                            <!--  弹出多选列表  -->
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                StaysOpen="False">
                                <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border
                                        x:Name="PopupBorder"
                                        Height="Auto"
                                        HorizontalAlignment="Stretch"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                    <ListBox
                                        x:Name="PART_ListBox"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        ItemContainerStyle="{StaticResource CheckItemStyle}"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                        SelectionMode="Multiple" />
                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                    <!--  触发器  -->
                    <ControlTemplate.Triggers>
                        <!--  1.显示水印  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--  编辑模式  -->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(local:ControlAttachProperty.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(local:ControlAttachProperty.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{Binding Path=(local:ControlAttachProperty.FocusBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>